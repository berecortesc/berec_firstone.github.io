Float a = 0.0;
//int b = 400;

float rand = 0;
String gridName = "Gary";
color back = color(HSB);



void setup()
{
  // float inc = TWO_PI/10.0;
  size(800, 600);
  colorMode(HSB, 255);
  background(255);
  //frameRate(7);
  noLoop();
}
void draw() {
  frameRate(7);
  for (int i = 0; i < 800; i += 20) {
    for (int j = 0; j < 600; j += 20) {
      rand = random(255);
      //rand = random(156);
      // rand = random(153);
      //stroke(rand);
      fill(rand, 153, 153);
      rect( i, j, 10, 10, 15, 16, 17, 19);
      rect (i, j, 20, 20, 17, 18, 20, 21);
      println(gridName + ", now has a fill value of " + rand);
      //noLoop();
    }
  }

  for (int s = 400; s < 450; s+=10) {
    for (int t = 150; t < 450; t+=5) {

      strokeWeight(0);
      fill(227, 252, 3);
      ellipse(s, t, 20, 20);
      ellipse(s, t, 40, 40);
    }
  }


  fill(19, 42, 105);
  noStroke();
  //rect(0,0,800,375);
  for (int i=25; i < 600; i +=25) {
    //frameRate(2);
    colorMode(HSB, 255);
    float r = random(10);
    fill(r*50, 153, 255);
    stroke(255);
    rect(0, i, i, 300, 150); 
    loop();
  }
  for (int i=450; i>300; i+=4) {   
    if (i == 450)
      line(i, 50, i, 50+sin(a)*40.0);
  }

  for (int r = 500; r==500; r+=300) {
    if (r >250) {
      colorMode(RGB, 255);
      fill(212, 25, 69);
      noStroke();
      ellipse(650, 100, 150, 150);  
      fill(3, 182, 252);
      ellipse(550, 100, 100, 100);
      fill(227, 252, 3);
      ellipse(500, 100, 75, 75);
      stroke(255);
      fill(0);
      noStroke();
      //square(400, 125, 25);
    }

    for (int m = 450; m < 500; m+=20)
    {
      for (int n = 200; n< 500; n+=20)
        //rand = random(153);
        fill(153);
      stroke(255);
      triangle(m, 300, 350, 350, 400, 400);
      triangle(m, 300, 350, 350, 400, 400);
//saveFrame();
    }
    for (int l=550; l > 550; l++) {
      if (l < 350) {
        fill(252, 186, 3);
        ellipse(l, 600, 200, 200);
      }
      if ( l> 600)
      {
        fill(255);
        rect(200, 200, 200, 300);
      }
    }
  }
}
